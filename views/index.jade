extends template/layout

block content
  script(type='text/javascript', src='http://maps.google.com/maps/api/js?sensor=true')
  script(type='text/javascript', src='/javascripts/gmaps.js')
  script(type='text/javascript', src='http://google-maps-utility-library-v3.googlecode.com/svn/tags/markerclusterer/1.0/src/markerclusterer.js')
  script(type='text/javascript', src='/lib/angular/angular.js')
  script(type='text/javascript', src='/controllers/main.js')
  script(type='text/javascript', src='//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js')
  script(type='text/javascript', src='/directives/google-maps.js')
  script(type='text/javascript', src='/controllers/gmap.js')
  script.
      window.onload = function(){
        var pathArray = window.location.pathname.split('/'); // splits the path array

        $.ajax({
          url: '/user/' + '#{user.university.universityKey}' + '/' + '#{user.fbId}'+ '/JSON',
          success: function(data, textStatus, jqXHR){
            var res = jqXHR.responseText;
            var parsed = $.parseJSON($.parseJSON(res).data);

            //'<img src="https://graph.facebook.com/' + parsed[0].fbUserId + '/picture?width=204&height=50" class="thumbnail">' + 
            for(var i=0; i<parsed.length; i++){
              map.addMarker({
                lat: parsed[i].latitude,
                lng: parsed[i].longitude,

                infoWindow: {
                  content: '<div style="width: 150px"> <table> <tbody> <tr> <td>' + 
                           '<p><b>' + parsed[i].name + '</b></p>' + 
                           '<p> Studying: <b>' + parsed[i].course + '</b></p>' + 
                           '<p> From <b>' + parsed[i].startTime + ' to ' + parsed[i].endTime + '</b></p>' + 
                           '<p>' + parsed[i].notes + '</p>' + 
                           '</td> </tr> </tbody> </table></div>'

                }
              });
            }
            // append info in table down


          }
        })

      }
      var map;
      $(document).ready(function(){
        map = new GMaps({
          el: '#map',
          lat: 40.1124997,
          lng: -88.2269172,
          zoomControl : true,
          zoomControlOpt: {
            style : 'SMALL',
            position: 'TOP_LEFT'
          },
          panControl : true,
          streetViewControl : false,
          mapTypeControl: true,
          overviewMapControl: false, 
          markerClusterer: function(map) {
            return new MarkerClusterer(map);
          },
          // map control options enabled
          mapTypeControlOptions: {
            mapTypeIds : ["hybrid", "roadmap", "satellite", "terrain", "osm", "cloudmade"]
          }
        });

        //- map.addMarker({
        //-   lat: 40.1124997,
        //-   lng: -88.2269172,
        //-   title: 'Lima',
        //-   infoWindow: {
        //-     content: '<p>HTML Content</p>'
        //-   }
        //- });

        map.addControl({
          position: 'top_right',
          content: 'Geolocate',
          style: {
            margin: '5px',
            padding: '1px 6px',
            border: 'solid 1px #717B87',
            background: '#fff'
          },
          events: {
            click: function(){
              GMaps.geolocate({
                success: function(position){
                  map.setCenter(position.coords.latitude, position.coords.longitude);

                },
                error: function(error){
                  alert('Geolocation failed: ' + error.message);
                },
                not_supported: function(){
                  alert("Your browser does not support geolocation");
                }
              });
            }
          }
        });

        map.addMapType("osm", {
          getTileUrl: function(coord, zoom) {
            return "http://tile.openstreetmap.org/" + zoom + "/" + coord.x + "/" + coord.y + ".png";
          },
          tileSize: new google.maps.Size(256, 256),
          name: "OpenStreetMap",
          maxZoom: 16
        });
        map.addMapType("cloudmade", {
          getTileUrl: function(coord, zoom) {
            return "http://b.tile.cloudmade.com/8ee2a50541944fb9bcedded5165f09d9/1/256/" + zoom + "/" + coord.x + "/" + coord.y + ".png";
          },
          tileSize: new google.maps.Size(256, 256),
          name: "CloudMade",
          maxZoom: 18
        });

        $('#geocoding_form').submit(function(e){
          if($('#address').val().length > 1){
            $("#addStudyLocation").removeAttr("disabled");
          } else {
            $("#addStudyLocation").attr('disabled', 'disabled');
          }

          e.preventDefault();
          GMaps.geocode({
            address: $('#address').val().trim(),
            callback: function(results, status){
              if(status=='OK'){
                var latlng = results[0].geometry.location;
                map.setCenter(latlng.lat(), latlng.lng());
                map.addMarker({
                  lat: latlng.lat(),
                  lng: latlng.lng(), 
                  infoWindow:{
                    content: 'Lat: ' + latlng.lat() + ' Lng: ' + latlng.lng()
                  }
                });

                $("#inputLocation").val($('#address').val().trim())
                $("#inputLatitude").val(latlng.lat());
                $("#inputLongitude").val(latlng.lng());
              //alert(latlng.lat() + " " + latlng.lng());
              }
            }
          });
        });
      });
  style.
      body{
        font-family: 'Droid Sans', 'Helvetica', Arial, sans-serif;
        margin:5px;
        }
        #map{
          display: block;
          width: 100%;
          height: 313px;
          margin: 0 auto;
          -moz-box-shadow: 0px 5px 20px #ccc;
          -webkit-box-shadow: 0px 5px 20px #ccc;
          box-shadow: 0px 5px 20px #ccc;
          margin-bottom: 20px;
        }
        #map.large{
          height:500px;
        }
        .overlay{
          display:block;
          text-align:center;
          color:#fff;
          font-size:60px;
          line-height:80px;
          opacity:0.8;
          background:#4477aa;
          border:solid 3px #336699;
          border-radius:4px;
          box-shadow:2px 2px 10px #333;
          text-shadow:1px 1px 1px #666;
          padding:0 4px;
        }
        .overlay_arrow{
          left:50%;
          margin-left:-16px;
          width:0;
          height:0;
          position:absolute;
        }
        .overlay_arrow.above{
          bottom:-15px;
          border-left:16px solid transparent;
          border-right:16px solid transparent;
          border-top:16px solid #336699;
        }
        .overlay_arrow.below{
          top:-15px;
          border-left:16px solid transparent;
          border-right:16px solid transparent;
          border-bottom:16px solid #336699;
        }
  #map
  .container
    .row
      .col-lg-8
        //p {{team}}
        form(method='POST', id='geocoding_form')
          .input-group
            input.form-control(ng-model='location', type='text', id='address', placeholder='Enter a #{user.university.universityKey} address here!')
            span.input-group-btn
              button.btn.btn-default( type='submit') Locate!  
      .col-lg-4
        form
          .input-group 
            a.btn.btn-primary.btn-lg(data-toggle='modal', href='#addGeoModal', id='addStudyLocation', disabled) Add study location at: {{location}}
  .container(style='margin-top:20px', ng-controller='UserData')
    .row
          .col-lg-4
            form.form-horizontal(role='form')
                .form-group
                    label.col-lg-2.control-label Course
                    .col-lg-10
                      select.form-control(ng-model='search.course')
                        option(value='') All Courses
                        option(ng-repeat='course in user.courses') {{course}}
                .form-group
                    label.col-lg-2.control-label Date
                    .col-lg-10
                      input.form-control(type='date', id='filterDate', ng-model='search.studyDate', ng-init='search={studyDate: "2013-08-18"}')
          .col-lg-8
            .row
              .col-lg-12
                p Results: {{geos.length}}
                table.table.table-hover
                  thead 
                    tr 
                      th 
                      th Name 
                      th Course 
                      th Address 
                      th Date 
                      th Time 
                      th Notes
                  tbody 
                    tr(ng-repeat='geo in geos | filter: search') 
                      td 
                        img.img-thumbnail(src='https://graph.facebook.com/{{geo.fbUserId}}/picture?width=300&height=300', alt='50x50', style='width: 50px; height: 50px;')
                      td {{geo.name}}
                      td {{geo.course}}
                      td {{geo.address}}
                      td {{geo.studyDate}}
                      td {{geo.startTime}} to {{geo.endTime}}
                      td {{geo.notes}}


  #addGeoModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
    .modal-dialog
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-hidden='true')
            h4.modal-title Add Study Location
          .modal-body
            form.form-horizontal(id="addGeo", method="POST", action="/data/addGeo", role='form', style='max-width: 530px; padding: 15px; margin: 0 auto;')
              .form-group
                  label.col-lg-2.control-label(for='inputLocation') Location
                  .col-lg-10
                      input.form-control(type='text', id='inputLocation', name='inputLocation', readonly)
              .form-group
                  label.col-lg-2.control-label(for='inputLatitude') Latitude
                  .col-lg-4
                    input.form-control(type='text', id='inputLatitude', name='inputLatitude', readonly)
                  label.col-lg-2.control-label(for='inputLongitude') Longitude
                  .col-lg-4
                    input.form-control(type='text', id='inputLongitude', name='inputLongitude', readonly)
              .form-group
                  label.col-lg-2.control-label(for='inputDate') Date
                  .col-lg-10
                      input.form-control(type='date', id='inputDate', name='inputDate')
              .form-group
                  label.col-lg-2.control-label(for='inputStartTime') StartTime
                  .col-lg-10
                      input.form-control(type='time', id='inputStartTime', name='inputStartTime')
              .form-group
                  label.col-lg-2.control-label(for='inputEndTime') EndTime
                  .col-lg-10
                      input.form-control(type='time', id='inputEndTime', name='inputEndTime')
              .form-group
                  label.col-lg-2.control-label(for='inputNotes') Notes
                  .col-lg-10
                      textarea.form-control(type='text', id='inputNotes', name='inputNotes',  placeholder="Enter any notes in here")
              .form-group
                  label.col-lg-2.control-label(for='inputCourse') Course
                  .col-lg-10
                      select.form-control(id='inputCourse', name='inputCourse')
                        option CS 125
                        option CS 173
                        option PHYS 212
                        option MATH 241
                        option CHEM 102   
              button.btn.btn-primary(type="submit", id='test') Add Study Info!

          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Close
            button.btn.btn-primary(type="submit", id='test') Add Study Info!


